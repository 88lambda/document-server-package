#!/bin/sh
# postinst script for onlyoffice
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

. /usr/share/debconf/confmodule

DIR="/var/www/onlyoffice"
LOG_DIR="/var/log/onlyoffice"
APP_DIR="/var/lib/onlyoffice"
DEFAULT_CONFIG="$DIR/documentserver/NodeJsProjects/Common/config/default.json"

OLD_VERSION="$2"

DB_HOST=""
DB_USER=""
DB_PWD=""
DB_NAME=""

install_db(){
	db_get onlyoffice/db-host || true
	DB_HOST="$RET"
	db_get onlyoffice/db-user || true
	DB_USER="$RET"
	db_get onlyoffice/db-pwd || true
	DB_PWD="$RET"
	db_get onlyoffice/db-name || true
	DB_NAME="$RET"

	MYSQL="mysql -h$DB_HOST -u$DB_USER"
	if [ -n "$DB_PWD" ]; then
		MYSQL="$MYSQL -p$DB_PWD"
	fi

	# test mysql connection
	set +e
	$MYSQL -e ";" &>/dev/null
	ERRCODE=$?
	if [ $ERRCODE -ne 0 ]; then
		service mysql start &>/dev/null
		$MYSQL -e ";" &>/dev/null || { echo "ERROR: can't connect to mysql database"; exit 1; }
	fi
	set -e

	if [ "$OLD_VERSION" = "" ]; then
		$MYSQL -e "CREATE DATABASE IF NOT EXISTS $DB_NAME CHARACTER SET utf8 COLLATE 'utf8_general_ci';"
	fi
	
		$MYSQL "$DB_NAME" < "$DIR/documentserver/Schema/MySql.CreateDb.sql"
}

apply_connection_string(){
	sed 's/"dbHost".*"/"dbHost": "'$DB_HOST'"/' -i $DEFAULT_CONFIG
	sed 's/"dbName".*"/"dbName": "'$DB_NAME'"/' -i $DEFAULT_CONFIG
	sed 's/"dbUser".*"/"dbUser": "'$DB_USER'"/' -i $DEFAULT_CONFIG
	sed 's/"dbPass".*"/"dbPass": "'$DB_PWD'"/' -i $DEFAULT_CONFIG
}

case "$1" in
	configure)
		adduser --quiet --home "$DIR" --system --group onlyoffice

		# add nginx user to onlyoffice group to allow access to used unix socket
		adduser --quiet www-data onlyoffice

		#install node modules
		npm install -g json

		install_db
		apply_connection_string

		# modify permissions for onlyoffice files and folders
		mkdir -p "$LOG_DIR/documentserver/DocService"
		mkdir -p "$LOG_DIR/documentserver/ExampleService"
		mkdir -p "$LOG_DIR/documentserver/FileConverterService"
		mkdir -p "$LOG_DIR/documentserver/SpellCheckerService"
		
		mkdir -p "$APP_DIR/documentserver/App_Data"
		mkdir -p "$APP_DIR/documentserver/App_Data/cache/files"
		mkdir -p "$DIR/Data"
		chown onlyoffice:onlyoffice -R "$DIR"
		
		# generate allfonts.js and thumbnail
		"$DIR/documentserver/Tools/AllFontsGen" "/usr/share/fonts" "$DIR/documentserver/OfficeWeb/sdk/Common/AllFonts.js" "$DIR/documentserver/OfficeWeb/sdk/Common/Images" "$DIR/documentserver/NodeJsProjects/FileConverter/Bin/font_selection.bin"
		
		chown onlyoffice:onlyoffice -R "$LOG_DIR"
		chown onlyoffice:onlyoffice -R "$APP_DIR"

		# import common ssl certificates
		mozroots --import --sync --machine --quiet

		mkdir -p /etc/mono/registry/LocalMachine
		mkdir -p /usr/share/.mono/keypairs

		# configure ngninx for onlyoffice
		rm -f /etc/nginx/sites-enabled/default

		# call db_stop to prevent installation hang
		db_stop

		# restart dependent services
		service supervisor restart >/dev/null 2>&1
		service nginx restart >/dev/null 2>&1
	;;

	abort-upgrade|abort-remove|abort-deconfigure)
	;;

	*)
		echo "postinst called with unknown argument \`$1'" >&2
		exit 1
	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
