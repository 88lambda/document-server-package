if ($http_host){
  set $redirect_host $http_host;
}

if ($http_x_forwarded_host){
  set $redirect_host $http_x_forwarded_host;
}
  
if ($http_x_forwarded_proto){
  set $redirect_host $host;
  
  rewrite ^(\/OfficeWeb)(\/apps\/(?!api\/).*)$ $http_x_forwarded_proto://$redirect_host$1/{{DATE}}$2 redirect;
}

rewrite ^(\/OfficeWeb)(\/apps\/(?!api\/).*)$ $1/{{DATE}}$2 redirect;

location ~ ^(\/OfficeWeb)(\/{{DATE}})?\/(apps|sdk|vendor)(?!\/Fonts\/)(\/.*)$ {
  expires 365d;
  alias /var/www/onlyoffice/documentserver$1/$3$4;
}

location ~ ^(\/OfficeWeb)(\/{{DATE}})?(\/sdk\/Fonts\/.*) {
  proxy_cache_min_uses 1;
  proxy_cache_key $scheme$proxy_host$uri$is_args$args;
  proxy_cache fonts_cache;
  proxy_cache_use_stale updating error timeout invalid_header http_500;
  proxy_cache_valid 1d;
  proxy_cache_methods GET HEAD;

  proxy_pass http://docservice$1$3;
}

location ~ ^(\/cache\/files.*)(\/.*) {
  alias /var/lib/onlyoffice/documentserver/App_Data$1;
  add_header Content-Disposition 'attachment;';

  # set $secret_string onlyoffice;
  # secure_link $arg_md5,$arg_expires;
  # secure_link_md5 "$secure_link_expires$uri$secret_string";

  # if ($secure_link = "") {
  #   return 403;
  # }

  # if ($secure_link = "0") {
  #     return 410;
  # }
}

location / {
  proxy_pass http://docservice;

  proxy_set_header Host $host;

  if ($http_x_forwarded_host = ''){
    set $http_x_forwarded_host $server_name;
  }
  if ($http_x_forwarded_proto = ''){
    set $http_x_forwarded_proto $scheme;
  }
  proxy_set_header X-Forwarded-Host $http_x_forwarded_host;
  proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
}

location /doc/ {
  proxy_pass http://docservice;
  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "upgrade";

  proxy_set_header Host $host;

  if ($http_x_forwarded_host = ''){
    set $http_x_forwarded_host $server_name;
  }
  if ($http_x_forwarded_proto = ''){
    set $http_x_forwarded_proto $scheme;
  }
  proxy_set_header X-Forwarded-Host $http_x_forwarded_host;
  proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
}